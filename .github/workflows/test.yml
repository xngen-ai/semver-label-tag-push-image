name: Test Action
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test-action:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Test action with minimal inputs
        uses: ./
        with:
          registry: 'ghcr.io'
          org_name: ${{ github.repository_owner }}
          image_name: 'test-image'
          image_title: 'Test Image'
          image_description: 'Test Description'
          version_increment: 'patch'
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: './test/Dockerfile'

  test-input-validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - version_increment: 'invalid'
            should_fail: true
          - version_increment: 'patch'
            should_fail: false
          - version_increment: 'minor'
            should_fail: false
          - version_increment: 'major'
            should_fail: false

    steps:
      - uses: actions/checkout@v4

      - name: Create test Dockerfile
        run: |
          echo "FROM alpine:latest" > Dockerfile
          echo "CMD ['echo', 'Hello World']" >> Dockerfile

      - name: Test version increment validation
        id: test-version-increment-validation
        uses: ./
        continue-on-error: ${{ matrix.should_fail }}
        with:
          registry: 'ghcr.io'
          org_name: ${{ github.repository_owner }}
          image_name: 'test-image'
          image_title: 'Test Image'
          image_description: 'Test Description'
          version_increment: ${{ matrix.version_increment }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify expected outcome
        if: ${{ matrix.should_fail }}
        run: |
          if [ "${{ steps.test-version-increment-validation.outcome }}" != "failure" ]; then
            echo "Test should have failed but didn't"
            exit 1
          fi 